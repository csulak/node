se genera por comandos un proyecto de nest, igual que cuando creas un proyecto de react


 instala nest cli -> generador de proyectos de nest (similar a lo que pasa con react)
>> npm i -g @nestjs/cli

 esto crea un nuevo proyecto de node con el framework nest  "node-nest" es el nombre que le elegi
>> nest new node-nest

 mientras lo instalas te pregunta si queres usar npm o yarn, elegis uno de los dos le das enter y listo

 >> npm run build (esto es para traspilar todo el codigo a js que es el codigo que subiriamos a prod)
 
 >> npm run start:dev (Es para levantar el proyecto)
 
 >> nest generate controller tasks (esto genera el controlador "tasks")
 
>> nest generate service tasks (esto genera el servicio "tasks")

>> nest generate module tasks (esto genera el modulo "tasks" que es el encargado de "administrar" el servicio(providers) y el controlador para todo lo relacionado a tasks

a su vez tambien en la raiz del proyecto, esta el app.module.ts el cual "administra" todos los controladores y servicios(providers) y los modulos




############# TYPE ORM #############
esto lo instalo para manejar mongo con node (el "hibernate" de mongo para node)
>> npm i @nestjs/mongoose mongoose

esto lo instalo para que cuando codeo me recomiende los comandos de mongoose
>> npm i @types/mongoose -D








##############################

run master (mysql)
tener levantada una instancia de mysql en el puerto default
crear base de datos con nombre que tenga en ormconfig.json
>> npm run build

>> npm run start:dev








#################################


cache

$ npm install cache-manager
$ npm install -D @types/cache-manager

